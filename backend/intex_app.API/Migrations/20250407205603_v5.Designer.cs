// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using intex_app.API.Controllers;

#nullable disable

namespace intex_app.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250407205603_v5")]
    partial class v5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("intex_app.API.Data.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("intex_app.API.Data.Headline", b =>
                {
                    b.Property<int>("HeadlineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HeadlineId"));

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HeadlineId");

                    b.ToTable("Headlines");
                });

            modelBuilder.Entity("intex_app.API.Data.Movie", b =>
                {
                    b.Property<int>("ShowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShowId"));

                    b.Property<string>("Cast")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Director")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShowId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("intex_app.API.Data.MovieCategory", b =>
                {
                    b.Property<int>("ShowId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ShowId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("MovieCategories");
                });

            modelBuilder.Entity("intex_app.API.Data.MovieUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Zip")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("MovieUsers");
                });

            modelBuilder.Entity("intex_app.API.Data.MovieUserStreamingService", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("StreamingServiceId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "StreamingServiceId");

                    b.HasIndex("StreamingServiceId");

                    b.ToTable("MovieUserStreamingServices");
                });

            modelBuilder.Entity("intex_app.API.Data.StreamingService", b =>
                {
                    b.Property<int>("StreamingServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StreamingServiceId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StreamingServiceId");

                    b.ToTable("StreamingServices");

                    b.HasData(
                        new
                        {
                            StreamingServiceId = 1,
                            Name = "Netflix"
                        },
                        new
                        {
                            StreamingServiceId = 2,
                            Name = "Amazon Prime"
                        },
                        new
                        {
                            StreamingServiceId = 3,
                            Name = "Disney+"
                        },
                        new
                        {
                            StreamingServiceId = 4,
                            Name = "Hulu"
                        },
                        new
                        {
                            StreamingServiceId = 5,
                            Name = "Max"
                        },
                        new
                        {
                            StreamingServiceId = 6,
                            Name = "Apple TV+"
                        },
                        new
                        {
                            StreamingServiceId = 7,
                            Name = "Peacock"
                        },
                        new
                        {
                            StreamingServiceId = 8,
                            Name = "Paramount+"
                        });
                });

            modelBuilder.Entity("intex_app.API.Data.Traffic", b =>
                {
                    b.Property<int>("TrafficId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrafficId"));

                    b.Property<string>("Fingerprint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("TrafficId");

                    b.ToTable("SiteTraffic");
                });

            modelBuilder.Entity("intex_app.API.Data.MovieCategory", b =>
                {
                    b.HasOne("intex_app.API.Data.Category", "Category")
                        .WithMany("MovieCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("intex_app.API.Data.Movie", "Movie")
                        .WithMany("MovieCategories")
                        .HasForeignKey("ShowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("intex_app.API.Data.MovieUserStreamingService", b =>
                {
                    b.HasOne("intex_app.API.Data.StreamingService", "StreamingService")
                        .WithMany("MovieUserStreamingServices")
                        .HasForeignKey("StreamingServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("intex_app.API.Data.MovieUser", "MovieUser")
                        .WithMany("MovieUserStreamingServices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MovieUser");

                    b.Navigation("StreamingService");
                });

            modelBuilder.Entity("intex_app.API.Data.Category", b =>
                {
                    b.Navigation("MovieCategories");
                });

            modelBuilder.Entity("intex_app.API.Data.Movie", b =>
                {
                    b.Navigation("MovieCategories");
                });

            modelBuilder.Entity("intex_app.API.Data.MovieUser", b =>
                {
                    b.Navigation("MovieUserStreamingServices");
                });

            modelBuilder.Entity("intex_app.API.Data.StreamingService", b =>
                {
                    b.Navigation("MovieUserStreamingServices");
                });
#pragma warning restore 612, 618
        }
    }
}
